apiVersion: apps/v1
kind: StatefulSet

metadata:
  name: {{ template "pgpool.statefulSetName" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "commonLabels" . | nindent 4 }}

spec:
  serviceName: {{ .Release.Name }}-db-pool
{{- if not .Values.pgpool.replicas }}
  {{- $dynamicReplicas := (mul .Values.global.masterReplicas .Values.global.replicationFactor) }}
  {{- if ge $dynamicReplicas 1 }}
  replicas: {{ $dynamicReplicas }}
  {{- else }}
  replicas: 1
  {{- end }}
{{- else }}
  replicas: {{ .Values.pgpool.replicas }}
{{- end }}
  updateStrategy:
    type: {{ .Values.pgpool.updateStrategy }}

  selector:
    matchLabels:
      {{- include "pgpool.enrichedLabels" . | nindent 6 }}

  template:
    metadata:
      labels:
        {{- include "pgpool.enrichedLabels" . | nindent 8}}
      annotations:
        checksum/pgpool-config: {{ include (print .Template.BasePath "/pgpool/configMap.yaml") . | sha256sum | trunc 63 }}

    spec:
      {{- if .Values.global.podPriorityClass.enabled }}
      {{- if .Values.pgpool.podPriorityClass }}
      priorityClassName: {{ template "pgpool.priorityClassName" . }}
      {{- end }}
      {{- end }}
      automountServiceAccountToken: false
      containers:
        - name: {{ template "pgpool.name" . }}-container
          image: {{ template "containerName" .Values.pgpool.image }}
          imagePullPolicy: {{ .Values.pgpool.image.pullPolicy }}
          ports:
          - name: db
            containerPort: 5432
          - name: transport
            containerPort: 9898

          envFrom:
          - secretRef:
              name: {{ template "pgpool.secretName" . }}

          env:
          - name: PG_PRIMARY_SERVICE_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ template "pgpool.configMapName" . }}
                key: PG_PRIMARY_SERVICE_NAME
          - name: PG_REPLICA_SERVICE_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ template "pgpool.configMapName" . }}
                key: PG_REPLICA_SERVICE_NAME
          - name: CRUNCHY_DEBUG
            valueFrom:
              configMapKeyRef:
                name: {{ template "pgpool.configMapName" . }}
                key: CRUNCHY_DEBUG

          {{- with .Values.global.dbCredentials }}
          - name: POSTGRES_USER
            value: {{ .postgres_user }}
          - name: POSTGRES_PASSWORD
            value: {{ .postgres_password }}
          {{- end }}

          volumeMounts:
          - name: {{ template "pgpool.configMapName" . }}
            mountPath: /pgconf/pgpoolconfigdir/pgpool.conf
            subPath: pgpool.conf
          - name: {{ template "pgpool.configMapName" . }}
            mountPath: /pgconf/pgpoolconfigdir/pool_hba.conf
            subPath: pool_hba.conf
          - name: {{ template "pgpool.configMapName" . }}
            mountPath: /pgconf/pgpoolconfigdir/pool_passwd
            subPath: pool_passwd
          - name: {{ template "pgpool.configMapName" . }}
            mountPath: /etc/pgpool-II-11/pool_passwd
            subPath: pool_passwd

          {{- if and .Values.pgpool.image.livenessProbe .Values.pgpool.image.livenessProbe.enabled }}
          {{- with .Values.pgpool.image.livenessProbe }}
          livenessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            exec:
              command:
                - sh
                - -c
                - |
                  #!/usr/bin/env bash
                  if pgrep -x pgpool > /dev/null ; then
                    exit 0
                  else
                    exit 127
                  fi

          {{- end }}
          {{- end }}
          {{- if and .Values.pgpool.image.readinessProbe .Values.pgpool.image.readinessProbe.enabled }}
          {{- with .Values.pgpool.image.readinessProbe }}
          readinessProbe:
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
            exec:
              command:
                - sh
                - -c
                - |
                  #!/usr/bin/env bash
                  PRIMARY_COUNT=$(PGCONNECT_TIMEOUT=$CHECK_PGCONNECT_TIMEOUT PGPASSWORD=$CHECK_PASSWORD psql -U $CHECK_USER -h 127.0.0.1 template1 -c 'show pool_nodes' | grep primary | wc -l)

                  if [[ "$PRIMARY_COUNT" == "0" ]]; then
                      exit 127
                  else
                      exit 0
                  fi
          {{- end }}
          {{- end }}
          {{- if .Values.pgpool.image.resources }}
          resources:
            {{- toYaml .Values.pgpool.image.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.pgpool.image.securityContext }}
          securityContext:
            {{- toYaml .Values.pgpool.image.securityContext | nindent 12 }}
          {{- end }}
      volumes:
        - name: {{ template "pgpool.configMapName" . }}
          configMap:
            name: {{ template "pgpool.configMapName" . }}
      terminationGracePeriodSeconds: {{ .Values.pgpool.terminationGracePeriodSeconds }}

    {{ if or .Values.pgpool.affinity .Values.pgpool.antiAffinity }}
      {{- if .Values.pgpool.antiAffinity }}
      affinity:
        podAntiAffinity:
          {{- if .Values.pgpool.antiAffinity.soft }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- end }}
        {{- if .Values.pgpool.antiAffinity.selfAntiAffinity }}
          {{- if ge (int .Values.pgpool.antiAffinity.selfAntiAffinity) 1 }}
          - weight: {{ .Values.pgpool.antiAffinity.selfAntiAffinity }}
          {{- else }}
          # ERROR: .Values.pgpool.antiAffinity.selfAntiAffinity < 1
          #        replaced with default value 100
          - weight: 100
          {{- end }}
        {{- else }}
          # ERROR: Impossible to reach edge case
          #        replaced with default value 100
          - weight: 100
        {{- end }}
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values: [{{ template "pgpool.podName" . }}]
                - key: {{ .Values.projectName }}/release-name
                  operator: In
                  values: [{{ .Release.Name }}]
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      {{- if .Values.pgpool.affinity }}
      {{- if or .Values.pgpool.affinity.poolmasterAffinity .Values.pgpool.affinity.poolreplicaAffinity }}
      {{- if not .Values.pgpool.antiAffinity }}
      affinity:
      {{- end }}
        podAffinity:
          {{- if .Values.pgpool.affinity.soft }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- end }}
        {{- if .Values.pgpool.affinity.poolmasterAffinity }}
          {{- if ge (int .Values.pgpool.affinity.poolmasterAffinity) 1 }}
          - weight: {{ .Values.pgpool.affinity.poolmasterAffinity }}
          {{- else }}
          # ERROR: .Values.pgpool.antiAffinity.poolmasterAffinity < 1
          #        replaced with default value 100
          - weight: 100
          {{- end }}
        {{- else }}
          # ERROR: Impossible to reach edge case
          #        replaced with default value 100
          - weight: 100
        {{- end }}
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [{{ include "name" . }}]
                - key: app.kubernetes.io/instance
                  operator: In
                  values: [{{ template "postgres.master.name" . }}]
              topologyKey: "kubernetes.io/hostname"
        {{- if .Values.pgpool.affinity.poolreplicaAffinity }}
          {{- if ge (int .Values.pgpool.affinity.poolreplicaAffinity) 1 }}
          - weight: {{ .Values.pgpool.affinity.poolreplicaAffinity }}
          {{- else }}
          # ERROR: .Values.pgpool.antiAffinity.poolreplicaAffinity < 1
          #        replaced with default value 100
          - weight: 100
          {{- end }}
        {{- else }}
          # ERROR: Impossible to reach edge case
          #        replaced with default value 100
          - weight: 100
        {{- end }}
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: [{{ include "name" . }}]
                - key: app.kubernetes.io/instance
                  operator: In
                  values: [{{ template "postgres.slave.name" . }}]
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      {{- end }}
    {{- end }}
